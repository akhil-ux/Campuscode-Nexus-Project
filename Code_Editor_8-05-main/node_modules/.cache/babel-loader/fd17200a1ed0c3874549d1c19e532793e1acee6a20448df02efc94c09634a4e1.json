{"ast":null,"code":"const languageCodeMap = {\n  cpp: 54,\n  python: 92,\n  javascript: 93,\n  java: 91\n};\nasync function getSubmission(tokenId) {\n  const url = `https://judge0-ce.p.rapidapi.com/submissions/${tokenId}?base64_encoded=true&fields=*`;\n  const options = {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': '105623b674msh9efb86c825a72b9p144c2ajsn183dd87575e6',\n      'x-rapidapi-host': 'judge0-ce.p.rapidapi.com'\n    }\n  };\n  const response = await fetch(url, options);\n  if (!response.ok) throw new Error(`Failed to fetch submission. Status: ${response.status}`);\n  return await response.json();\n}\nexport async function makesubmission({\n  code,\n  language,\n  callback,\n  stdin = ''\n}) {\n  const url = 'https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=true&wait=false&fields=*';\n  const httpOptions = {\n    method: 'POST',\n    headers: {\n      'x-rapidapi-key': '105623b674msh9efb86c825a72b9p144c2ajsn183dd87575e6',\n      'x-rapidapi-host': 'judge0-ce.p.rapidapi.com',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      language_id: languageCodeMap[language],\n      source_code: btoa(code),\n      stdin: btoa(stdin)\n    })\n  };\n  try {\n    callback({\n      apiStatus: 'loading'\n    });\n    const response = await fetch(url, httpOptions);\n    if (response.status === 429) {\n      callback({\n        apiStatus: 'error',\n        message: 'Rate limit exceeded. Please wait and try again.'\n      });\n      return;\n    }\n    const result = await response.json();\n    const tokenId = result.token;\n    if (!tokenId) {\n      callback({\n        apiStatus: 'error',\n        message: 'No token received from Judge0 API.'\n      });\n      return;\n    }\n    let statusCode = 1;\n    let submissionResult;\n    while (statusCode === 1 || statusCode === 2) {\n      await new Promise(resolve => setTimeout(resolve, 1000)); // wait 1 sec between checks\n      submissionResult = await getSubmission(tokenId);\n      statusCode = submissionResult.status.id;\n    }\n    callback({\n      apiStatus: 'success',\n      data: submissionResult\n    });\n  } catch (error) {\n    callback({\n      apiStatus: 'error',\n      message: error.message\n    });\n  }\n}","map":{"version":3,"names":["languageCodeMap","cpp","python","javascript","java","getSubmission","tokenId","url","options","method","headers","response","fetch","ok","Error","status","json","makesubmission","code","language","callback","stdin","httpOptions","body","JSON","stringify","language_id","source_code","btoa","apiStatus","message","result","token","statusCode","submissionResult","Promise","resolve","setTimeout","id","data","error"],"sources":["D:/psit/campuscode nexus/Code_Editor_8-05-main/src/screens/PlaygroundScreen/service.js"],"sourcesContent":["const languageCodeMap = {\r\n    cpp: 54,\r\n    python: 92,\r\n    javascript: 93,\r\n    java: 91,\r\n  };\r\n  \r\n  async function getSubmission(tokenId) {\r\n    const url = `https://judge0-ce.p.rapidapi.com/submissions/${tokenId}?base64_encoded=true&fields=*`;\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-rapidapi-key': '105623b674msh9efb86c825a72b9p144c2ajsn183dd87575e6',\r\n        'x-rapidapi-host': 'judge0-ce.p.rapidapi.com'\r\n      }\r\n    };\r\n  \r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`Failed to fetch submission. Status: ${response.status}`);\r\n    return await response.json();\r\n  }\r\n  \r\n  export async function makesubmission({ code, language, callback, stdin = '' }) {\r\n    const url = 'https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=true&wait=false&fields=*';\r\n  \r\n    const httpOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'x-rapidapi-key': '105623b674msh9efb86c825a72b9p144c2ajsn183dd87575e6',\r\n        'x-rapidapi-host': 'judge0-ce.p.rapidapi.com',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        language_id: languageCodeMap[language],\r\n        source_code: btoa(code),\r\n        stdin: btoa(stdin),\r\n      })\r\n    };\r\n  \r\n    try {\r\n      callback({ apiStatus: 'loading' });\r\n  \r\n      const response = await fetch(url, httpOptions);\r\n      if (response.status === 429) {\r\n        callback({ apiStatus: 'error', message: 'Rate limit exceeded. Please wait and try again.' });\r\n        return;\r\n      }\r\n  \r\n      const result = await response.json();\r\n      const tokenId = result.token;\r\n  \r\n      if (!tokenId) {\r\n        callback({ apiStatus: 'error', message: 'No token received from Judge0 API.' });\r\n        return;\r\n      }\r\n  \r\n      let statusCode = 1;\r\n      let submissionResult;\r\n  \r\n      while (statusCode === 1 || statusCode === 2) {\r\n        await new Promise(resolve => setTimeout(resolve, 1000)); // wait 1 sec between checks\r\n        submissionResult = await getSubmission(tokenId);\r\n        statusCode = submissionResult.status.id;\r\n      }\r\n  \r\n      callback({ apiStatus: 'success', data: submissionResult });\r\n    } catch (error) {\r\n      callback({ apiStatus: 'error', message: error.message });\r\n    }\r\n  }\r\n  "],"mappings":"AAAA,MAAMA,eAAe,GAAG;EACpBC,GAAG,EAAE,EAAE;EACPC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,EAAE;EACdC,IAAI,EAAE;AACR,CAAC;AAED,eAAeC,aAAaA,CAACC,OAAO,EAAE;EACpC,MAAMC,GAAG,GAAG,gDAAgDD,OAAO,+BAA+B;EAClG,MAAME,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;EAC1C,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uCAAuCH,QAAQ,CAACI,MAAM,EAAE,CAAC;EAC3F,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeC,cAAcA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,KAAK,GAAG;AAAG,CAAC,EAAE;EAC7E,MAAMd,GAAG,GAAG,sFAAsF;EAElG,MAAMe,WAAW,GAAG;IAClBb,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE,0BAA0B;MAC7C,cAAc,EAAE;IAClB,CAAC;IACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,WAAW,EAAE1B,eAAe,CAACmB,QAAQ,CAAC;MACtCQ,WAAW,EAAEC,IAAI,CAACV,IAAI,CAAC;MACvBG,KAAK,EAAEO,IAAI,CAACP,KAAK;IACnB,CAAC;EACH,CAAC;EAED,IAAI;IACFD,QAAQ,CAAC;MAAES,SAAS,EAAE;IAAU,CAAC,CAAC;IAElC,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEe,WAAW,CAAC;IAC9C,IAAIX,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC3BK,QAAQ,CAAC;QAAES,SAAS,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAkD,CAAC,CAAC;MAC5F;IACF;IAEA,MAAMC,MAAM,GAAG,MAAMpB,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpC,MAAMV,OAAO,GAAGyB,MAAM,CAACC,KAAK;IAE5B,IAAI,CAAC1B,OAAO,EAAE;MACZc,QAAQ,CAAC;QAAES,SAAS,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAqC,CAAC,CAAC;MAC/E;IACF;IAEA,IAAIG,UAAU,GAAG,CAAC;IAClB,IAAIC,gBAAgB;IAEpB,OAAOD,UAAU,KAAK,CAAC,IAAIA,UAAU,KAAK,CAAC,EAAE;MAC3C,MAAM,IAAIE,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;MACzDF,gBAAgB,GAAG,MAAM7B,aAAa,CAACC,OAAO,CAAC;MAC/C2B,UAAU,GAAGC,gBAAgB,CAACnB,MAAM,CAACuB,EAAE;IACzC;IAEAlB,QAAQ,CAAC;MAAES,SAAS,EAAE,SAAS;MAAEU,IAAI,EAAEL;IAAiB,CAAC,CAAC;EAC5D,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdpB,QAAQ,CAAC;MAAES,SAAS,EAAE,OAAO;MAAEC,OAAO,EAAEU,KAAK,CAACV;IAAQ,CAAC,CAAC;EAC1D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}